# ShardingJDBC 数据源管理
# 数据源清单，多个数据源之间用","分隔
spring.shardingsphere.datasource.names=mystudio,dbnode1,dbnode2

spring.shardingsphere.datasource.mystudio.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.mystudio.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.mystudio.url=jdbc:mysql://localhost:3306/mystudio?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
spring.shardingsphere.datasource.mystudio.username=rockpile
spring.shardingsphere.datasource.mystudio.password=rockpile
# 初始化时建立物理连接的个数
spring.shardingsphere.datasource.mystudio.initial-size=5
# 最小连接池数量
spring.shardingsphere.datasource.mystudio.min-idle=10
# 最大连接池数量
spring.shardingsphere.datasource.mystudio.maxActive=50
# 获取连接时最大等待时间，单位毫秒
spring.shardingsphere.datasource.mystudio.maxWait=5000
spring.shardingsphere.datasource.mystudio.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.mystudio.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.mystudio.validationQuery=SELECT 1 
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
# 建议配置为true，不影响性能，并且保证安全性
spring.shardingsphere.datasource.mystudio.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，开启该配置会降低性能
spring.shardingsphere.datasource.mystudio.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，开启该配置会降低性能
spring.shardingsphere.datasource.mystudio.testOnReturn=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，如oracle。mysql建议关闭。
spring.shardingsphere.datasource.mystudio.poolPreparedStatements=false
spring.shardingsphere.datasource.mystudio.filters=stat

spring.shardingsphere.datasource.dbnode1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dbnode1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.dbnode1.url=jdbc:mysql://localhost:3306/dbnode_1?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
spring.shardingsphere.datasource.dbnode1.username=rockpile
spring.shardingsphere.datasource.dbnode1.password=rockpile
spring.shardingsphere.datasource.dbnode1.initial-size=5
spring.shardingsphere.datasource.dbnode1.min-idle=10
spring.shardingsphere.datasource.dbnode1.maxActive=50
spring.shardingsphere.datasource.dbnode1.maxWait=5000
spring.shardingsphere.datasource.dbnode1.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.dbnode1.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.dbnode1.validationQuery=SELECT 1 
spring.shardingsphere.datasource.dbnode1.testWhileIdle=true
spring.shardingsphere.datasource.dbnode1.testOnBorrow=false
spring.shardingsphere.datasource.dbnode1.testOnReturn=false
spring.shardingsphere.datasource.dbnode1.poolPreparedStatements=false
spring.shardingsphere.datasource.dbnode1.filters=stat

spring.shardingsphere.datasource.dbnode2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dbnode2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.dbnode2.url=jdbc:mysql://localhost:3306/dbnode_2?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
spring.shardingsphere.datasource.dbnode2.username=rockpile
spring.shardingsphere.datasource.dbnode2.password=rockpile
spring.shardingsphere.datasource.dbnode2.initial-size=5
spring.shardingsphere.datasource.dbnode2.min-idle=10
spring.shardingsphere.datasource.dbnode2.maxActive=50
spring.shardingsphere.datasource.dbnode2.maxWait=5000
spring.shardingsphere.datasource.dbnode2.timeBetweenEvictionRunsMillis=60000
spring.shardingsphere.datasource.dbnode2.minEvictableIdleTimeMillis=300000
spring.shardingsphere.datasource.dbnode2.validationQuery=SELECT 1 
spring.shardingsphere.datasource.dbnode2.testWhileIdle=true
spring.shardingsphere.datasource.dbnode2.testOnBorrow=false
spring.shardingsphere.datasource.dbnode2.testOnReturn=false
spring.shardingsphere.datasource.dbnode2.poolPreparedStatements=false
spring.shardingsphere.datasource.dbnode2.filters=stat


