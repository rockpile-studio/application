****** Seata分布式事务 ******
全局唯一事务id：Transaction Id（XID）

Transaction Coordinator（TC）：事务协调器，维护全局事务和分支事务的状态，驱动全局事务提交和回滚。
Transaction Manager（TM）：事务管理器，控制全局事务的边界，开始全局事务、提交&回滚全局事务。
Resource Manager（RM）：资源管理器，管理分支事务的处理资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务的提交&回滚。

处理过程
1、TM向TC申请开启一个全局事务，全局事务创建成功并生成一个全局唯一的XID。
2、XID在微服务调用链路的上下文中传播。
3、RM向TC注册分支事务，将其纳入XID对全局事务的管辖。
4、TM向TC发起针对XID的全局提交或回滚。
5、TC调度XID下管辖的全部分支事务完成提交或回滚请求。

使用分布式事务框架Seata，一次写SQL(Update)操作需要额外执行：
全局事务XID(TC通讯)、Before Image(解析SQL+查询DB)、After Image(查询DB)、Insert undo_log、Before Commit(TC通讯+判断锁冲突)
这些操作都需要附加一次远程RPC通讯，而且是同步的，另外undo_log写入时blob字段的插入性能也不高。
每条写SQL粗略估计会增加5倍的开销时间
所以在业务设计时，尽可能通过微服务的内聚，实现事务一致性，尽可能少用Seata

启动seata
Options: 
--host, -h：The host to bind. 
--port, -p：The port to listen. Default: 8091 
--storeMode, -m：log store mode : file、db. Default: file 
--help 
[root@localhost seata]# sh ./bin/seata-server.sh -p 8091 -h 192.168.4.119 -m file
 
 