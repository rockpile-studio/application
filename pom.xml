<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>studio.rockpile.application</groupId>
	<artifactId>application</artifactId>
	<version>1.0.0-RELEASE</version>
	<packaging>pom</packaging>

	<modules>
		<module>model</module>
		<module>framework</module>
		<module>demo-server</module>
		<module>portal</module>
		<module>gateway</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<springboot.version>2.2.2.RELEASE</springboot.version>
		<springcloud.version>Hoxton.RELEASE</springcloud.version>
		<springcloud.alibaba.version>2.1.0.RELEASE</springcloud.alibaba.version>

		<swagger.version>2.8.0</swagger.version>
		<mybatis.plus.version>3.3.0</mybatis.plus.version>
		<druid.version>1.1.20</druid.version>
		<seata.version>1.2.0</seata.version>

		<sharding.sphere.version>4.1.1</sharding.sphere.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${springcloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${springcloud.alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<exclusion>
						<groupId>com.alibaba.cloud</groupId>
						<artifactId>spring-cloud-alibaba-seata</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.seata</groupId>
						<artifactId>seata-all</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shardingsphere</groupId>
				<artifactId>sharding-jdbc-spring-boot-starter</artifactId>
				<version>${sharding.sphere.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.ulisesbocchio</groupId>
				<artifactId>jasypt-spring-boot-starter</artifactId>
				<version>2.1.1</version>
			</dependency>

			<!-- mybatis-plus -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis.plus.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis.plus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-engine-core</artifactId>
				<version>2.1</version>
			</dependency>
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>1.2.13</version>
				<exclusions>
					<exclusion>
						<groupId>org.mybatis</groupId>
						<artifactId>mybatis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.mybatis</groupId>
						<artifactId>mybatis-spring</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- swagger2 -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>28.0-jre</version>
			</dependency>

			<!-- seata-1.2.0 -->
			<!-- 使用分布式事务框架Seata，一次写SQL(Update)操作需要额外执行： -->
			<!-- 全局事务XID(TC通讯)、Before Image(解析SQL+查询DB)、After Image(查询DB)、Insert undo_log、Before 
				Commit(TC通讯+判断锁冲突) -->
			<!-- 这些操作都需要附加一次远程RPC通讯，而且是同步的，另外undo_log写入时blob字段的插入性能也不高 -->
			<!-- 每条写SQL粗略估计会增加5倍的开销时间 -->
			<!-- 所以在业务设计时，尽可能通过微服务的内聚，实现事务一致性，尽可能少用Seata -->
			<dependency>
				<!-- 2.1.0和2.1.1兼容starter解决方案: -->
				<!-- @SpringBootApplication注解内exclude掉com.alibaba.cloud.seata.GlobalTransactionAutoConfiguration -->
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-seata</artifactId>
				<version>2.2.0.RELEASE</version>
				<exclusions>
					<exclusion>
						<groupId>io.seata</groupId>
						<artifactId>seata-spring-boot-starter</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.seata</groupId>
				<artifactId>seata-spring-boot-starter</artifactId>
				<version>${seata.version}</version>
			</dependency>
			<dependency>
				<groupId>io.seata</groupId>
				<artifactId>seata-all</artifactId>
				<version>${seata.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${springboot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<fork>true</fork>
						<addResources>true</addResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>